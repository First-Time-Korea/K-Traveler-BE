<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.firskorea.plan.mapper.PlanMapper">

	<insert id="insertPlan" parameterType="map"
		useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into plan
		(member_id, title)
		values (#{memberId},#{title});
	</insert>

	<insert id="insertPlanAndAttraction" parameterType="map">
		insert into
		plan_and_attraction (plan_id, content_id, date)
		values
		(#{planId},#{contentId},#{date});
	</insert>

	<insert id="insertPlanThumbnail" parameterType="PlanThumbnailDto">
		insert into plan_file
		(save_folder, origin_file, save_file, plan_id)
		values
		(#{saveFolder},#{originFile},#{saveFile},#{planId});
	</insert>

	<select id="getPlanAndAttractions"
		resultType="PlanAndAttractionDto" parameterType="int">
		select p.id plan_id, paa.id paa_id, p.title planTitle, paa.content_id, paa.date
		from plan p
		join plan_and_attraction paa
		on p.id=paa.plan_id
		where p.id=#{planId};
	</select>

	<select id="planAttractionDetails" resultType="PlanAttractionDetailsDto"
		parameterType="PlanAndAttractionDto">
		select paa.plan_id, paa.id paa_id, paa.date, ai.title
		contentTitle, ai.content_id, ai.addr1, ai.first_image, ai.longitude,
		ai.latitude,
		(select pm.text
		from plan_memo pm
		where
		pm.plan_and_attraction_id=paa.id
		) as memo_text
		from plan_and_attraction
		paa
		join attraction_info ai
		on paa.content_id= ai.content_id
		where paa.id=#{paaId} and paa.content_id=#{contentId};
	</select>
	
	<update id="updatePlanMemo" parameterType="PlanMemoDto">
	INSERT INTO plan_memo (plan_and_attraction_id, text)
	VALUES (#{planAndAttractionId},#{text})
	ON DUPLICATE KEY UPDATE
	text = VALUES(text);
	</update>
	
	<!-- 나의 여행 계획 리스트 조회하기 -->
	<select id="retrievePaginatedPlans" parameterType="map" resultType="planInfoDto">
		select p.id, p.title, a.start_date, a.end_date, f.save_folder, f.origin_file, f.save_file
		from (
			select id, title
			from plan
			where member_id = #{memberId}
		) p, (
			select plan_id, MIN(date) start_date, MAX(date) end_date
			from plan_and_attraction
			group by plan_id
		) a, plan_file f
		where p.id = a.plan_id
		and p.id = f.plan_id
		order by p.id desc
		limit #{start}, #{listsize}
	</select>
	
	<!-- 나의 여행 계획 총 개수 구하기 -->
	<select id="getTotalPlanCount" parameterType="string" resultType="int">
		select count(id)
		from plan
		where member_id = #{memberId}
	</select>

	<delete id="deletePlan" parameterType="string">
		delete from plan where id=#{planId};
	</delete>

</mapper>