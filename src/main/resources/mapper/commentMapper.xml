<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.firskorea.board.mapper.CommentMapper">

	<resultMap type="commentDto" id="comment">
		<result column="id" property="id" />
		<result column="article_id" property="articleId" />
		<result column="member_id" property="memberId" />
		<result column="parent_article_comment_id" property="parentCommentId" />
		<result column="content" property="content" />
		<result column="created_time" property="createdTime" />
		<result column="status" property="existed" />
		<result column="member_status" property="existedOfMember" />
	</resultMap>
	
	<!-- 여행 후기 댓글 등록하기 -->
	<insert id="writeComment" parameterType="commentDto">
		<choose>
			<when test="parentCommentId > 0">
				insert into article_comment (article_id, member_id, parent_article_comment_id, content)
				values (#{articleId}, #{memberId}, #{parentCommentId}, #{content})
			</when>
			<otherwise>
				insert into article_comment (article_id, member_id, content)
				values (#{articleId}, #{memberId}, #{content})
			</otherwise>
		</choose>
	</insert>
	
	<!-- 여행 후기 댓글 리스트 조회하기 -->
	<select id="getComments" parameterType="int" resultMap="comment">
		select c.id, c.article_id, c.member_id, m.status member_status, c.parent_article_comment_id, c.content, c.created_time, c.status
		from member m, (
			select id, article_id, member_id, parent_article_comment_id, content, created_time, status
			from article_comment c
			where article_id = #{articleId}
		) c
		where m.id = c.member_id
	</select>
	
	<!-- 여행 후기 댓글 삭제하기 -->
	<update id="deleteComment" parameterType="int">
		update article_comment
		set status = 0
		where id = #{commentId}
	</update>
	
</mapper>